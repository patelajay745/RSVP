org: ajaypatel
app: rsvp
service: rsvp
frameworkVersion: "4"

provider:
    name: aws
    runtime: nodejs18.x
    profile: ajay
    iamRoleStatements:
        - Effect: Allow
          Action:
              - s3:*
              - ses:*
          Resource: "*"
    logs:
        http: true

plugins:
    - serverless-offline
    - serverless-dotenv-plugin
    - serverless-middleware
    - serverless-domain-manager

custom:
    customDomain:
        domainName: rsvp-backend.ajayproject.com
        basePath: ""
        stage: dev
        createRoute53Records: true

functions:
    welcome:
        handler: index.handler
        events:
            - http:
                  path: /
                  method: GET
                  cors: true
    UserCreate:
        handler: handlers/user/register.handler
        events:
            - http:
                  path: /user
                  method: POST
                  cors: true
    GetUser:
        handler: handlers/user/user.handler
        middleware:
            pre:
                - middleware/auth.authenticate
        events:
            - http:
                  path: /user
                  method: GET
                  cors: true
    RefreshToken:
        handler: handlers/user/refresh-token.handler
        events:
            - http:
                  path: /refresh-token
                  method: POST
                  cors: true
    UserLogin:
        handler: handlers/user/login.handler
        events:
            - http:
                  path: /login
                  method: POST
                  cors: true
    UserUpdatePassword:
        handler: handlers/user/updatePassword.handler
        middleware:
            pre:
                - middleware/auth.authenticate
        events:
            - http:
                  path: /change-password
                  method: POST
                  cors: true
    UserLogout:
        handler: handlers/user/logout.handler
        middleware:
            pre:
                - middleware/auth.authenticate
        events:
            - http:
                  path: /logout
                  method: POST
                  cors: true

    HitUrl:
        handler: handlers/event/hitUrl.handler
        events:
            - http:
                  path: /event/u/{shortUrl}
                  method: GET
                  cors: true
    UpdateEvent:
        handler: handlers/event/updateEvent.handler
        middleware:
            pre:
                - middleware/auth.authenticate
        events:
            - http:
                  path: /event/{eventId}
                  method: PATCH
                  cors: true
    GetAEvent:
        handler: handlers/event/getAEvent.handler
        middleware:
            pre:
                - middleware/auth.authenticate
        events:
            - http:
                  path: /event/e/{eventId}
                  method: GET
                  cors: true
    GetAttendies:
        handler: handlers/event/getAttendies.handler
        middleware:
            pre:
                - middleware/auth.authenticate
        events:
            - http:
                  path: /event/f/{eventId}
                  method: GET
                  cors: true
    GetAllEvents:
        handler: handlers/event/getAllEvents.handler
        middleware:
            pre:
                - middleware/auth.authenticate
        events:
            - http:
                  path: /event
                  method: GET
                  cors: true
    ToggleEvent:
        handler: handlers/event/toggleEvent.handler
        middleware:
            pre:
                - middleware/auth.authenticate
        events:
            - http:
                  path: /event/e/{eventId}
                  method: PATCH
                  cors: true
    DeleteEvent:
        handler: handlers/event/deleteEvent.handler
        middleware:
            pre:
                - middleware/auth.authenticate
        events:
            - http:
                  path: /event/{eventId}
                  method: DELETE
                  cors: true

    CreateRSVP:
        handler: handlers/event/createRSVP.handler
        events:
            - http:
                  path: /family
                  method: POST
                  cors: true
    DeleteRSVP:
        handler: handlers/event/deleteRSVP.handler
        middleware:
            pre:
                - middleware/auth.authenticate
        events:
            - http:
                  path: /family/{eventId}/{familyId}
                  method: DELETE
                  cors: true

    GenerateOTP:
        handler: handlers/user/sendConfirmMail.handler
        middleware:
            pre:
                - middleware/auth.authenticate
        events:
            - http:
                  path: /user/sendEmail
                  method: POST
                  cors: true
    verifyEmail:
        handler: handlers/user/verifyEmail.handler
        middleware:
            pre:
                - middleware/auth.authenticate
        events:
            - http:
                  path: /user/verifyEmail
                  method: POST
                  cors: true
    CreateEvent:
        handler: handlers/event/createEvent.handler
        middleware:
            pre:
                - middleware/auth.authenticate
        events:
            - http:
                  path: /event
                  method: POST
                  cors: true
